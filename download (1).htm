<!doctype html>
<html
	lang="en"
	style="
		margin: 0;
		padding: 0;
		min-height: 100%;
		display: flex;
		flex-direction: column;
	"
>
	<head>
		<meta charset="utf-8" />
		<meta
			name="viewport"
			content="width=device-width, initial-scale=1, shrink-to-fit=no"
		/>
		<meta property="og:title" content="Gradio" />
		<meta property="og:type" content="website" />
		<meta property="og:url" content="{url}" />
		<meta property="og:description" content="Click to try out the app!" />
		<meta
			property="og:image"
			content="https://raw.githubusercontent.com/gradio-app/gradio/main/js/_website/src/lib/assets/img/header-image.jpg"
		/>
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:creator" content="@Gradio" />
		<meta name="twitter:title" content="Gradio" />
		<meta name="twitter:description" content="Click to try out the app!" />
		<meta
			name="twitter:image"
			content="https://raw.githubusercontent.com/gradio-app/gradio/main/js/_website/src/lib/assets/img/header-image.jpg"
		/>

		<style>
			:root {
				--bg: white;
				--col:   #27272a;
				--bg-dark: #0f0f11;
				--col-dark: #f4f4f5;
			}


			body {
				background: var(--bg);
				color: var(--col);
				font-family: Arial, Helvetica, sans-serif;
			}

			@media (prefers-color-scheme: dark) {
				body {
					background: var(--bg-dark);
					color: var(--col-dark);
				}
			}
		</style>

		<meta property="og:url" content="https://gradio.app/" />
		<meta property="og:type" content="website" />
		<meta property="og:image" content="" />
		<meta property="og:title" content="Gradio" />
		<meta
			property="og:description"
			content=""
		/>
		<meta name="twitter:card" content="summary_large_image" />
		<meta name="twitter:creator" content="@teamGradio" />
		<meta name="twitter:title" content="Gradio" />
		<meta
			name="twitter:description"
			content=""
		/>
		<meta name="twitter:image" content="" />

		<script data-gradio-mode>
			window.__gradio_mode__ = "app";
			window.iFrameResizer = {
				heightCalculationMethod: "taggedElement"
			};
			window.parent?.postMessage(
				{ type: "SET_SCROLLING", enabled: false },
				"*"
			);
		</script>

		<script>window.gradio_config = {"version":"5.44.1","api_prefix":"/gradio_api","mode":"blocks","app_id":12929190722354076300,"dev_mode":false,"vibe_mode":false,"analytics_enabled":true,"components":[{"id":1,"type":"markdown","props":{"value":"# AI Code Analysis \u0026 Generator","show_label":false,"rtl":false,"latex_delimiters":[{"left":"$$","right":"$$","display":true}],"visible":true,"elem_classes":[],"preserved_by_key":["value"],"sanitize_html":true,"line_breaks":false,"header_links":false,"show_copy_button":false,"container":false,"padding":false,"name":"markdown","_selectable":false},"skip_api":false,"component_class_id":"543eb5f8dcfca947ba66ab196db059c79cdca82621b183bfcd8bbe4afebcd005","key":null,"api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"# Hello!"},{"id":2,"type":"tabs","props":{"visible":true,"preserved_by_key":[],"name":"tabs"},"skip_api":true,"component_class_id":"22dbb3f249d0ebfccaf6679c6fddf2a5c3a3deaaebf43709589d9f325a4e053e","key":null},{"id":3,"type":"tabitem","props":{"label":"Code Analysis","visible":true,"interactive":true,"preserved_by_key":[],"name":"tab"},"skip_api":true,"component_class_id":"50cebf6c1ab5a230766014a0047026712a25674fc1ac94d0310963ce1423abb0","key":null},{"id":4,"type":"row","props":{"variant":"default","visible":true,"equal_height":false,"show_progress":false,"preserved_by_key":[],"name":"row"},"skip_api":true,"component_class_id":"d31af921ae188765327079cfc062d57afc3fd6f1774765ed869512a94f7c5c22","key":null},{"id":5,"type":"column","props":{"scale":1,"min_width":320,"variant":"default","visible":true,"show_progress":false,"preserved_by_key":[],"name":"column"},"skip_api":true,"component_class_id":"d32cc8b06253a743628a25220fc5e2a82556f3b9f3a8810ac82cd17bb190798c","key":null},{"id":6,"type":"file","props":{"file_count":"single","file_types":[".pdf"],"type":"filepath","label":"Upload PDF","show_label":true,"container":true,"min_width":160,"visible":true,"elem_classes":[],"preserved_by_key":["value"],"allow_reordering":false,"name":"file","_selectable":false},"skip_api":false,"component_class_id":"438489d5aa5488d7984cc24d8b6b6b1e6321a510713a8e8adf6317df228c1098","key":null,"api_info":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"api_info_as_input":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"api_info_as_output":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"example_inputs":{"path":"https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf","meta":{"_type":"gradio.FileData"},"orig_name":"sample_file.pdf","url":"https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf"}},{"id":7,"type":"textbox","props":{"type":"text","lines":5,"placeholder":"Describe your software requirements...","label":"Or write requirements here","show_label":true,"container":true,"min_width":160,"visible":true,"autofocus":false,"autoscroll":true,"elem_classes":[],"preserved_by_key":["value"],"rtl":false,"show_copy_button":false,"submit_btn":false,"stop_btn":false,"name":"textbox","_selectable":false},"skip_api":false,"component_class_id":"9662103783aaa2c9d411262219a021534ef712eba183b6b1911957c1aa61468e","key":null,"api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"Hello!!"},{"id":8,"type":"button","props":{"value":"Analyze","variant":"secondary","size":"lg","visible":true,"interactive":true,"elem_classes":[],"preserved_by_key":["value"],"name":"button","_selectable":false},"skip_api":true,"component_class_id":"d94e42bc0de64d88926a97585021956fe523296790198ad29a92dcb81a90b02d","key":null},{"id":9,"type":"form","props":{"scale":0,"min_width":0,"preserved_by_key":[],"name":"form"},"skip_api":true,"component_class_id":"40d4832c92b433558cfc7a2a218841dc7dec54c8c9f9470aa3fca95c935b8614","key":null},{"id":10,"type":"column","props":{"scale":1,"min_width":320,"variant":"default","visible":true,"show_progress":false,"preserved_by_key":[],"name":"column"},"skip_api":true,"component_class_id":"d32cc8b06253a743628a25220fc5e2a82556f3b9f3a8810ac82cd17bb190798c","key":null},{"id":11,"type":"textbox","props":{"type":"text","lines":20,"label":"Requirements Analysis","show_label":true,"container":true,"min_width":160,"visible":true,"autofocus":false,"autoscroll":true,"elem_classes":[],"preserved_by_key":["value"],"rtl":false,"show_copy_button":false,"submit_btn":false,"stop_btn":false,"name":"textbox","_selectable":false},"skip_api":false,"component_class_id":"9662103783aaa2c9d411262219a021534ef712eba183b6b1911957c1aa61468e","key":null,"api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"Hello!!"},{"id":12,"type":"form","props":{"scale":0,"min_width":0,"preserved_by_key":[],"name":"form"},"skip_api":true,"component_class_id":"40d4832c92b433558cfc7a2a218841dc7dec54c8c9f9470aa3fca95c935b8614","key":null},{"id":13,"type":"tabitem","props":{"label":"Code Generation","visible":true,"interactive":true,"preserved_by_key":[],"name":"tab"},"skip_api":true,"component_class_id":"50cebf6c1ab5a230766014a0047026712a25674fc1ac94d0310963ce1423abb0","key":null},{"id":14,"type":"row","props":{"variant":"default","visible":true,"equal_height":false,"show_progress":false,"preserved_by_key":[],"name":"row"},"skip_api":true,"component_class_id":"d31af921ae188765327079cfc062d57afc3fd6f1774765ed869512a94f7c5c22","key":null},{"id":15,"type":"column","props":{"scale":1,"min_width":320,"variant":"default","visible":true,"show_progress":false,"preserved_by_key":[],"name":"column"},"skip_api":true,"component_class_id":"d32cc8b06253a743628a25220fc5e2a82556f3b9f3a8810ac82cd17bb190798c","key":null},{"id":16,"type":"textbox","props":{"type":"text","lines":5,"placeholder":"Describe what code you want to generate...","label":"Code Requirements","show_label":true,"container":true,"min_width":160,"visible":true,"autofocus":false,"autoscroll":true,"elem_classes":[],"preserved_by_key":["value"],"rtl":false,"show_copy_button":false,"submit_btn":false,"stop_btn":false,"name":"textbox","_selectable":false},"skip_api":false,"component_class_id":"9662103783aaa2c9d411262219a021534ef712eba183b6b1911957c1aa61468e","key":null,"api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"Hello!!"},{"id":17,"type":"dropdown","props":{"choices":[["Python","Python"],["JavaScript","JavaScript"],["Java","Java"],["C++","C++"],["C#","C#"],["PHP","PHP"],["Go","Go"],["Rust","Rust"]],"value":"Python","type":"value","allow_custom_value":false,"filterable":true,"label":"Programming Language","show_label":true,"container":true,"min_width":160,"visible":true,"elem_classes":[],"preserved_by_key":["value"],"name":"dropdown","_selectable":false},"skip_api":false,"component_class_id":"00d716ccc02b6ee02e757c45a9d0d54672fddf8ba5dc848b6368bc0cfa11160e","key":null,"api_info":{"type":"string","enum":["Python","JavaScript","Java","C++","C#","PHP","Go","Rust"]},"api_info_as_input":{"type":"string","enum":["Python","JavaScript","Java","C++","C#","PHP","Go","Rust"]},"api_info_as_output":{"type":"string","enum":["Python","JavaScript","Java","C++","C#","PHP","Go","Rust"]},"example_inputs":"Python"},{"id":18,"type":"button","props":{"value":"Generate Code","variant":"secondary","size":"lg","visible":true,"interactive":true,"elem_classes":[],"preserved_by_key":["value"],"name":"button","_selectable":false},"skip_api":true,"component_class_id":"d94e42bc0de64d88926a97585021956fe523296790198ad29a92dcb81a90b02d","key":null},{"id":19,"type":"form","props":{"scale":0,"min_width":0,"preserved_by_key":[],"name":"form"},"skip_api":true,"component_class_id":"40d4832c92b433558cfc7a2a218841dc7dec54c8c9f9470aa3fca95c935b8614","key":null},{"id":20,"type":"column","props":{"scale":1,"min_width":320,"variant":"default","visible":true,"show_progress":false,"preserved_by_key":[],"name":"column"},"skip_api":true,"component_class_id":"d32cc8b06253a743628a25220fc5e2a82556f3b9f3a8810ac82cd17bb190798c","key":null},{"id":21,"type":"textbox","props":{"type":"text","lines":20,"label":"Generated Code","show_label":true,"container":true,"min_width":160,"visible":true,"autofocus":false,"autoscroll":true,"elem_classes":[],"preserved_by_key":["value"],"rtl":false,"show_copy_button":false,"submit_btn":false,"stop_btn":false,"name":"textbox","_selectable":false},"skip_api":false,"component_class_id":"9662103783aaa2c9d411262219a021534ef712eba183b6b1911957c1aa61468e","key":null,"api_info":{"type":"string"},"api_info_as_input":{"type":"string"},"api_info_as_output":{"type":"string"},"example_inputs":"Hello!!"},{"id":22,"type":"form","props":{"scale":0,"min_width":0,"preserved_by_key":[],"name":"form"},"skip_api":true,"component_class_id":"40d4832c92b433558cfc7a2a218841dc7dec54c8c9f9470aa3fca95c935b8614","key":null}],"css":"","connect_heartbeat":false,"js":"","head":"","title":"Gradio","space_id":null,"enable_queue":true,"show_error":false,"show_api":true,"is_colab":true,"max_file_size":null,"stylesheets":["https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@400;600\u0026display=swap"],"theme":"default","protocol":"sse_v3","body_css":{"body_background_fill":"white","body_text_color":"#27272a","body_background_fill_dark":"#0f0f11","body_text_color_dark":"#f4f4f5"},"fill_height":false,"fill_width":false,"theme_hash":"dcc5ba6daa59190cd89158b9dcd638cb327c8d2793466af78361ece68e126118","pwa":false,"pages":[["","Home"]],"page":{"":{"layout":{"id":0,"children":[{"id":1},{"id":2,"children":[{"id":3,"children":[{"id":4,"children":[{"id":5,"children":[{"id":6},{"id":9,"children":[{"id":7}]},{"id":8}]},{"id":10,"children":[{"id":12,"children":[{"id":11}]}]}]}]},{"id":13,"children":[{"id":14,"children":[{"id":15,"children":[{"id":19,"children":[{"id":16},{"id":17}]},{"id":18}]},{"id":20,"children":[{"id":22,"children":[{"id":21}]}]}]}]}]}]},"components":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22],"dependencies":[0,1]}},"mcp_server":false,"i18n_translations":null,"dependencies":[{"id":0,"targets":[[8,"click"]],"inputs":[6,7],"outputs":[11],"backend_fn":true,"js":null,"queue":true,"api_name":"requirement_analysis","api_description":null,"scroll_to_output":false,"show_progress":"full","show_progress_on":null,"batch":false,"max_batch_size":4,"cancels":[],"types":{"generator":false,"cancel":false},"collects_event_data":false,"trigger_after":null,"trigger_only_on_success":false,"trigger_only_on_failure":false,"trigger_mode":"once","show_api":true,"rendered_in":null,"render_id":null,"connection":"sse","time_limit":null,"stream_every":0.5,"like_user_message":false,"event_specific_args":null,"js_implementation":null},{"id":1,"targets":[[18,"click"]],"inputs":[16,17],"outputs":[21],"backend_fn":true,"js":null,"queue":true,"api_name":"code_generation","api_description":null,"scroll_to_output":false,"show_progress":"full","show_progress_on":null,"batch":false,"max_batch_size":4,"cancels":[],"types":{"generator":false,"cancel":false},"collects_event_data":false,"trigger_after":null,"trigger_only_on_success":false,"trigger_only_on_failure":false,"trigger_mode":"once","show_api":true,"rendered_in":null,"render_id":null,"connection":"sse","time_limit":null,"stream_every":0.5,"like_user_message":false,"event_specific_args":null,"js_implementation":null}],"layout":{"id":0,"children":[{"id":1},{"id":2,"children":[{"id":3,"children":[{"id":4,"children":[{"id":5,"children":[{"id":6},{"id":9,"children":[{"id":7}]},{"id":8}]},{"id":10,"children":[{"id":12,"children":[{"id":11}]}]}]}]},{"id":13,"children":[{"id":14,"children":[{"id":15,"children":[{"id":19,"children":[{"id":16},{"id":17}]},{"id":18}]},{"id":20,"children":[{"id":22,"children":[{"id":21}]}]}]}]}]}]},"username":null,"deep_link_state":"none","current_page":"","root":"https://3bdd8ef42c1e864d32.gradio.live"};</script><script>window.gradio_api_info = {"named_endpoints":{"/requirement_analysis":{"parameters":[{"label":"Upload PDF","parameter_name":"pdf_file","parameter_has_default":false,"parameter_default":null,"type":{"$defs":{"FileDataMeta":{"properties":{"_type":{"const":"gradio.FileData","title":"Type","type":"string"}},"required":["_type"],"title":"FileDataMeta","type":"object"}},"properties":{"path":{"title":"Path","type":"string"},"url":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Url"},"size":{"anyOf":[{"type":"integer"},{"type":"null"}],"default":null,"title":"Size"},"orig_name":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Orig Name"},"mime_type":{"anyOf":[{"type":"string"},{"type":"null"}],"default":null,"title":"Mime Type"},"is_stream":{"default":false,"title":"Is Stream","type":"boolean"},"meta":{"$ref":"#/$defs/FileDataMeta"}},"required":["path"],"title":"FileData","type":"object","additional_description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"python_type":{"type":"filepath","description":"The FileData class is a subclass of the GradioModel class that represents a file object within a Gradio interface. It is used to store file data and metadata when a file is uploaded.\n\nAttributes:\n    path: The server file path where the file is stored.\n    url: The normalized server URL pointing to the file.\n    size: The size of the file in bytes.\n    orig_name: The original filename before upload.\n    mime_type: The MIME type of the file.\n    is_stream: Indicates whether the file is a stream.\n    meta: Additional metadata used internally (should not be changed)."},"component":"File","example_input":{"path":"https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf","meta":{"_type":"gradio.FileData"},"orig_name":"sample_file.pdf","url":"https://github.com/gradio-app/gradio/raw/main/test/test_files/sample_file.pdf"}},{"label":"Or write requirements here","parameter_name":"prompt_text","parameter_has_default":false,"parameter_default":null,"type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox","example_input":"Hello!!"}],"returns":[{"label":"Requirements Analysis","type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox"}],"show_api":true,"description":""},"/code_generation":{"parameters":[{"label":"Code Requirements","parameter_name":"prompt","parameter_has_default":false,"parameter_default":null,"type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox","example_input":"Hello!!"},{"label":"Programming Language","parameter_name":"language","parameter_has_default":true,"parameter_default":"Python","type":{"type":"string","enum":["Python","JavaScript","Java","C++","C#","PHP","Go","Rust"]},"python_type":{"type":"Literal[\u0027Python\u0027, \u0027JavaScript\u0027, \u0027Java\u0027, \u0027C++\u0027, \u0027C#\u0027, \u0027PHP\u0027, \u0027Go\u0027, \u0027Rust\u0027]","description":""},"component":"Dropdown","example_input":"Python"}],"returns":[{"label":"Generated Code","type":{"type":"string"},"python_type":{"type":"str","description":""},"component":"Textbox"}],"show_api":true,"description":""}},"unnamed_endpoints":{}};</script>

		<link rel="preconnect" href="https://fonts.googleapis.com" />
		<link
			rel="preconnect"
			href="https://fonts.gstatic.com"
			crossorigin="anonymous"
		/>
		<script
			src="https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/4.3.1/iframeResizer.contentWindow.min.js"
			async
		></script>

		<link rel="manifest" href="/manifest.json" />
		<script type="module" crossorigin src="https://gradio.s3-us-west-2.amazonaws.com/5.44.1/gradio.js"></script>
		
	</head>

	<body
		style="
			width: 100%;
			margin: 0;
			padding: 0;
			display: flex;
			flex-direction: column;
			flex-grow: 1;
		"
	>
		<gradio-app
			control_page_title="true"
			embed="false"
			eager="true"
			style="display: flex; flex-direction: column; flex-grow: 1"
		>
		</gradio-app>
		<script>
			const ce = document.getElementsByTagName("gradio-app");

			if (ce[0]) {
				ce[0].addEventListener("domchange", () => {
					document.body.style.padding = "0";
				});
				document.body.style.padding = "0";
			}
		</script>
	</body>
</html>